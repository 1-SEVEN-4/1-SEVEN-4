// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Group {
  id            String   @id @default(uuid())
  name          String   @unique
  ownerNickname String   @unique
  ownerPassword String
  description   String
  photo         String?
  tags          String?
  goalRep       Int
  discordURL    String
  invitationURL String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  memberCount   Int
  likeCount     Int
  members       Member[]
  records       Record[]
}

model Member {
  id        String   @id @default(uuid())
  nickname  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  groups    Group?   @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId   String?
  records   Record[]
}

model Record {
  id          String   @id @default(uuid())
  sports      Sports
  description String
  time        Int
  distance    Int
  photo       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  groups      Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId     String
  members     Member   @relation(fields: [memberId], references: [id], onDelete: Cascade)
  memberId    String
}

enum Sports {
  RUNNING
  CYCLING
  SWIMMING
}
