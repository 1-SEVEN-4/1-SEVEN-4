// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Group {
  id             String   @id @default(uuid())
  groupName      String   @unique
  NicKname       String   @unique
  Password       String
  description    String?
  Photo          String?
  tag            String?
  goalCount      Int
  recommendation Int
  discordURL     String
  InvitationURL  String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  Member         Member[]
  record         Record[]
}

model Member {
  id        String   @id @default(uuid())
  Nickname  String   @unique
  Password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  group     Group?   @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId   String?
  record    Record[]
}

model Record {
  id          String   @id @default(uuid())
  sports      Sports
  description String
  timer       Int
  distance    Int
  recordPhoto String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  group       Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId     String
  member      Member   @relation(fields: [memberId], references: [id], onDelete: Cascade)
  memberId    String
}

enum Sports {
  RUNNING
  CYCLING
  SWIMMING
}
